# ████████╗███╗   ███╗██╗   ██╗██╗  ██╗
# ╚══██╔══╝████╗ ████║██║   ██║╚██╗██╔╝
#    ██║   ██╔████╔██║██║   ██║ ╚███╔╝
#    ██║   ██║╚██╔╝██║██║   ██║ ██╔██╗
#    ██║   ██║ ╚═╝ ██║╚██████╔╝██╔╝ ██╗
#    ╚═╝   ╚═╝     ╚═╝ ╚═════╝ ╚═╝  ╚═╝
# A terminal multiplexer
# https://github.com/tmux/tmux/wiki

# don't exit from tmux when closing a session
set -g detach-on-destroy no-detached
set -g prefix M-a
set -g mode-keys vi

set -g default-shell /bin/bash
set -g default-terminal "screen-256color"
# set -sa terminal-overrides ",screen-256color:RGB"
set -ag terminal-overrides ",alacritty:RGB"

set -g mouse on
set -g escape-time 0
set -g base-index 1
set -g set-titles on
set -g renumber-windows on
set -g focus-events on

# windows
setw -g pane-base-index 1
setw -g main-pane-width 55%
setw -g main-pane-height 60%

set-hook -g window-linked "select-layout main-vertical; select-layout"
set-hook -g after-split-window "select-layout"
set-hook -g pane-exited "select-layout"

# detach when the `popup` session is destroyed
set-hook -g session-created "if-shell -F '#{==:#{hook_session_name},popup}' {set detach-on-destroy on} {}"

# client_last_session

set -g window-status-current-format '#[fg=magenta,bold]#I:#{?window_zoomed_flag, ,}#W'
set -g window-status-format '#[fg=gray] #I:#W'

# panes
set -g pane-border-style 'fg=brightblack,bg=default'
set -g pane-active-border-style 'fg=magenta,bg=default'

# status line
set -g status-interval 2
set -g status-position top
set -g status-style 'bg=default'
set -g status-left-length 300
set -g status-right-length 300
set -g status-left '#[fg=blue,bold]#S 󰇙 '
set -g status-right '#[fg=white,bold]#($HOME/.config/tmux/host-status.sh)'

# key bindings
unbind C-b
unbind x
bind X kill-pane
bind M-a send-prefix

# reload tmux configuration file
bind R source-file "~/.config/tmux/tmux.conf" \; display-message "config reloaded"

# layouts
bind 0 select-layout main-vertical
bind 9 select-layout main-horizontal

# pane management
bind j select-pane -t+
bind k select-pane -t-
bind h select-pane -L
bind l select-pane -R
bind m select-pane -t "{top-left}"

bind -r J swap-pane -D
bind -r K swap-pane -U

bind n run-shell 'tmuxctl split'
bind N split-window -h -c "#{pane_current_path}"

bind c new-window -c "#{pane_current_path}"
bind Enter swap-pane -s :.top

bind b switch-client -l
bind p select-window -l

bind -n "M-1" if-shell "tmux select-window -t:1" {} {new-window -t:1}
bind -n "M-2" if-shell "tmux select-window -t:2" {} {new-window -t:2}
bind -n "M-3" if-shell "tmux select-window -t:3" {} {new-window -t:3}
bind -n "M-4" if-shell "tmux select-window -t:4" {} {new-window -t:4}

bind e run-shell -b "tmuxctl jump"
bind s run-shell -b "tmuxctl switch"
bind E run-shell -b "tmuxctl splitdb"

bind - if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -d "#{pane_current_path}" -xC -yC -w 70% -h 70% -E \
    'tmux new-session -A -s popup nvim -c "lua require(\"kiwi\").open_wiki_index()" -c "cd %:h"'
}
