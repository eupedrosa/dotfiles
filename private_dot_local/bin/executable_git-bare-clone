#!/usr/bin/env bash

# `-e` halt on error
# `-u` exit when undefined variable is used
# `-o pipefail` return the command code behind a pipe failure
set -euo pipefail

help() {
    >&2 echo 'usage: git-bare-clone <repo> [dir]
    '
    exit 1
}

# check for no arguments
[[ $# -eq 0 ]] && {
    >&2 echo -e 'fatal: You must specify a repository to clone.\n'
    help
}

# repo is the first argument
repo="$1"

# repo directory is the second argument
[[ $# -eq 2 ]] && {
    repodir="$2"
} || {
    repodir=$(basename $repo)
    repodir=${repodir%%.*}
}

# quit if the repo directory already exists
[[ -d "$repodir" ]] && {
    >&2 echo -e "fatal: the directory '$repodir' already exist."
    exit 1
}

YELLOW="\e[33m"
ENDCOLOR="\e[0m"

echo -e "${YELLOW}Cloning repository...${ENDCOLOR}"

mkdir "$repodir"
git clone --bare "$repo" "$repodir/.bare" || {
    rmdir "$repodir"
    exit 1
}

echo "gitdir: ./.bare" > "$repodir/.git"

echo -e "${YELLOW}Ajust fetch location...${ENDCOLOR}"
git config -f $repodir/.bare/config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"

