# ██████╗  █████╗ ███████╗██╗  ██╗
# ██╔══██╗██╔══██╗██╔════╝██║  ██║
# ██████╔╝███████║███████╗███████║
# ██╔══██╗██╔══██║╚════██║██╔══██║
# ██████╔╝██║  ██║███████║██║  ██║
# ╚═════╝ ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝
# https://www.gnu.org/software/bash/

# If not running interactively, don't do anything
[[ $- =~ i ]] || return

# add $HOME/.local/bin to path if it does not exist
[[ ":$PATH:" != *":$HOME/.local/bin:"* ]] && \
    export PATH=$HOME/.local/bin:$PATH

[[ -z $LANG ]] && export LC_ALL=C.UTF-8

# Auto tmux if
#   - it is not running
#   - and there is a client connected to a session
[[ -x $(command -v tmux) ]] && [[ -z $TMUX ]] && {
    tmux has-session &> /dev/null
    [[ "$?" -eq "1" ]] && exec tmux new -A -s $USER -c $HOME bash
}

## HISTORY ######################################

# save it in the cache directory
HISTFILE="$HOME/.cache/bash_history"

# large history size
HISTSIZE=100000
HISTFILESIZE=200000
HISTTIMEFORMAT='%F %T '

# avoid duplicates and unecessary entries
HISTCONTROL="erasedups:ignoreboth"
HISTIGNORE="&:[ ]*:exit:ls:bg:fb:history:exit:cd"

shopt -s histappend
shopt -s cmdhist
shopt -s histreedit
shopt -s histverify
shopt -s lithist

#################################################

## OPTIONS ######################################

# check the window size after each command
shopt -s checkwinsize

# helpfull cd
shopt -s autocd     2> /dev/null
shopt -s dirspell   2> /dev/null
shopt -s cdspell    2> /dev/null

# do not overwrite with stout redirection
set -o noclobber

# better tab completion
bind "set completion-ignore-case on"
bind "set completion-map-case on"
bind "set show-all-if-ambiguous on"
bind "set mark-symlinked-directories on"

bind '"\e[A": history-search-backward'
bind '"\e[B": history-search-forward'
bind '"\e[C": forward-char'
bind '"\e[D": backward-char'

#################################################

## PROMPT #######################################

bold="\[\e[1m\]"
green="\[\e[32m\]"
yellow="\[\e[33m\]"
blue="\[\e[34m\]"
cyan="\[\e[36m\]"
reset_color="\[\\e[0m\]"

PS1=""

[[ -n $SSH_TTY ]] && \
    PS1+="${bold}${yellow}\u${reset_color} in ${bold}${blue} "

PS1+="${bold}${green}\h${reset_color}"
if [ -f /etc/bash_completion.d/git-prompt ]; then
    source /etc/bash_completion.d/git-prompt
    export GIT_PS1_SHOWDIRTYSTATE=1
    PS1+=" in ${bold}${blue}\w\$(__git_ps1)\n"
else
    PS1+=" in ${bold}${blue}\w\n"
fi

[[ -f /run/.containerenv ]] || [[ -f /.dockerenv ]] && \
    PS1+="${bold}${cyan} "

PS1+="${bold}${green}❯ ${reset_color}"

# add a new line after executing a command
__nl_prompt() {
    local pos
    IFS='[;' read -p $'\e[6n' -d R -a pos -rs || echo "failed with error: $? ; ${pos[*]}"

    [[ "${pos[1]}" -gt 2 ]] && echo
}

[[ ";$PROMPT_COMMAND;" != *";__nl_prompt;"* ]] && \
    PROMPT_COMMAND="__nl_prompt;$PROMPT_COMMAND"

#################################################

[[ -f /opt/ros/noetic/setup.bash ]] && source /opt/ros/noetic/setup.bash

## Alias ########################################
#
# open without poluting the terminal with messages
__xdg_open() { nohup xdg-open "$@" &> /dev/null; }
alias open='__xdg_open'

# allow sudo with alias
alias sudo='sudo '

alias rm='rm -I --preserve-root'
alias cp='cp -i'
alias ln='ln -i'
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

alias du='du -ch'
alias df='df -H'
alias grep='grep --color'
alias path='echo -e ${PATH//:/\\n}'
alias kill='pkill'
alias pgrep='pgrep -a'

alias reboot='sudo /sbin/reboot'
alias poweroff='sudo /sbin/poweroff'

# clipboard
alias pbcopy='xclip -selection clipboard'
alias pbpaste='xclip -o -selection clipboard'

[[ -x $(command -v nvim) ]] && {
    alias vi='nvim'
    alias vim='nvim'
    # use nvim for editing
    export EDITOR=nvim
}

[[ -x $(command -v batcat) ]] && {
    alias cat='batcat -n --theme OneHalfDark'
    # use bat as the man pager
    export MANPAGER="sh -c 'col -bx | batcat -l man -p'"
}

[[ -x $(command -v exa) ]] && {
    alias ls='exa'
    alias l='exa'
    alias ll='exa -l'
    alias la='exa -a'
    alias lla='exa -la'
    alias tree='exa --tree'
    alias tree1='exa --tree -L1'
    alias tree2='exa --tree -L2'
    alias tree3='exa --tree -L3'
}

[[ -x $(command -v tmux) ]] && [[ -x $(command -v tmuxctl) ]] && {
    alias j='tmuxctl jump'
}

[[ -x $(command -v fzf) ]] && [[ -f /usr/share/doc/fzf/examples/key-bindings.bash ]] && {
    source /usr/share/doc/fzf/examples/key-bindings.bash
}

[[ -x $(command -v htop) ]] && alias top='htop'

[[ -x $(command -v zoxide) ]] && eval "$(zoxide init bash)"
[[ -x $(command -v direnv) ]] && eval "$(direnv hook bash)"

#################################################
# FUNCTIONS
#
function gi() { curl -sL "https://www.toptal.com/developers/gitignore/api/$@"; }


#################################################
[[ -x $(command -v chezmoi) ]] && eval "$(chezmoi completion bash)"

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
